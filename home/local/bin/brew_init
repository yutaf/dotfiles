#!/usr/bin/env bash

# Referred from http://lapwinglabs.com/blog/hacker-guide-to-setting-up-your-mac

PARALLEL=50
RED=31
GREEN=32
YELLOW=33
BLUE=34

#
# echo with <color>.
#
cecho() {
    color=$1
    shift
    echo -e "\033[${color}m$@\033[m"
}

#
# Log <msg>.
#
log() {
  cecho $YELLOW "  ○ $@"
}

#
# Warn <msg>.
#
warn() {
  cecho $RED "  ○ $@"
}


if ! type brew > /dev/null 2>&1; then
  log "Installing homebrew..."
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
else
  log "update homebrew..."
  brew update
fi

# tap
TAP_LIST="
homebrew/dupes
homebrew/versions
homebrew/completions
homebrew/homebrew-binary
"

log "tapping formulas..."
echo "$TAP_LIST" | xargs -t -n $PARALLEL -P $PARALLEL -I % brew tap % 2> /dev/null || true

#taps=(
#  homebrew/dupes
#  homebrew/versions
#  homebrew/completions
#)
#
#for tap in ${taps[@]}; do
#  brew tap $tap 2> /dev/null || true
#done

# Install other useful binaries
log "installing binaries..."


# Install GNU core utilities (those that come with OS X are outdated)
brew install coreutils 2> /dev/null || true
# Install GNU `find`, `locate`, `updatedb`, and `xargs`, g-prefixed
brew install findutils 2> /dev/null || true
# Install GNU `sed`
brew install gnu-sed 2> /dev/null || true
# Install openssl
brew install openssl
# link openssl
brew link openssl --force

binaries=(
  direnv
  hub
  hugo
  jq
  nkf
  pwgen
  tig
  tree
  zsh
)

# Install the binaries
brew install ${binaries[@]} 2> /dev/null || true

# vim for NeoBundle
#brew install vim --with-lua 2> /dev/null || true

# Remove outdated versions from the cellar
brew cleanup

###########################################################################
# Change default shell to zsh

# chsh -s $(which zsh)

# If you get error
# Error: "chsh: /usr/local/bin/zsh: non-standard shell"
# Add zsh path to /etc/shells
# https://rcmdnk.com/blog/2015/05/25/computer-mac-bash-zsh/
###########################################################################

###########################################################################
# Terminal Color

# solarized
# You have to clone solarized from https://github.com/altercation/solarized
# Set them in terminal, iterm2
# Don't use intellij settings in this repository
###########################################################################

###########################################################################
# Intellij Editor Color
# https://github.com/jkaving/intellij-colors-solarized
###########################################################################

###########################################################################
# oh-my-git

# You have to install the fonts from https://github.com/gabrielelana/awesome-terminal-fonts/tree/patching-strategy/patched
# https://github.com/arialdomartini/oh-my-git#troubleshooting
# Then set the fonts in terminal setting
# "SourceCodePro+Powerline+Awesome+Regular.ttf" is good
###########################################################################

# Install apps

# password required for cask
#brew cask install --appdir=/Applications firefox

#APP_LIST="
#bettertouchtool
#bittorrent-sync
#coteditor
#dropbox
#google-chrome
#google-japanese-ime
#iterm2
#kindle
#opera
#totalterminal
#transmit
#vagrant
#virtualbox
#virtualbox-extension-pack
#"

#log "installing apps..."
#echo "$APP_LIST" | xargs -t -n $PARALLEL -P $PARALLEL -I % brew cask install --appdir=/Applications % 2> /dev/null || true

#apps=(
#  iterm2
#  dropbox
#  google-chrome
#  firefox
#  vagrant
#  virtualbox
#  transmit
#  slack
#  skype
#  appcleaner
#  send-to-kindle
#  magican
#  hoster
#)
#
## install apps
#brew cask install --appdir=/Applications ${apps[@]} 2> /dev/null || true

log "installing vagrant plugins"
vagrant plugin install dotenv vagrant-digitalocean
